// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product/product.proto

package product

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProductRequest struct {
	Products             []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{0}
}

func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (m *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(m, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type Product struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price                float32  `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{1}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type ProductReply struct {
	Total                float32  `protobuf:"fixed32,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductReply) Reset()         { *m = ProductReply{} }
func (m *ProductReply) String() string { return proto.CompactTextString(m) }
func (*ProductReply) ProtoMessage()    {}
func (*ProductReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9f5dc4dd6fa6d7, []int{2}
}

func (m *ProductReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductReply.Unmarshal(m, b)
}
func (m *ProductReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductReply.Marshal(b, m, deterministic)
}
func (m *ProductReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductReply.Merge(m, src)
}
func (m *ProductReply) XXX_Size() int {
	return xxx_messageInfo_ProductReply.Size(m)
}
func (m *ProductReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProductReply proto.InternalMessageInfo

func (m *ProductReply) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*ProductRequest)(nil), "product.ProductRequest")
	proto.RegisterType((*Product)(nil), "product.Product")
	proto.RegisterType((*ProductReply)(nil), "product.ProductReply")
}

func init() { proto.RegisterFile("product/product.proto", fileDescriptor_5f9f5dc4dd6fa6d7) }

var fileDescriptor_5f9f5dc4dd6fa6d7 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4e, 0xc4, 0x20,
	0x10, 0x87, 0xa5, 0xfe, 0x59, 0x1d, 0xcd, 0x6a, 0x88, 0x1b, 0x89, 0xa7, 0x86, 0x78, 0x68, 0x8c,
	0xc1, 0x64, 0xf7, 0xee, 0xa1, 0xbe, 0x00, 0x21, 0xfa, 0x00, 0x88, 0xc4, 0x34, 0xa1, 0x82, 0x94,
	0x26, 0xf6, 0xed, 0x37, 0x14, 0xe8, 0xa5, 0x27, 0xe6, 0x63, 0xbe, 0x09, 0xc3, 0x0f, 0x76, 0xce,
	0xdb, 0xef, 0x51, 0x85, 0xd7, 0x7c, 0x32, 0xe7, 0x6d, 0xb0, 0x78, 0x93, 0x91, 0xbe, 0xc1, 0x96,
	0xa7, 0x52, 0xe8, 0xbf, 0x51, 0x0f, 0x01, 0xbf, 0xc0, 0x65, 0x6e, 0x0e, 0x04, 0xd5, 0xa7, 0xcd,
	0xf5, 0xfe, 0x8e, 0x95, 0xe1, 0xa2, 0x2e, 0x06, 0x3d, 0xc0, 0x26, 0x5f, 0x62, 0x0c, 0x67, 0xbf,
	0xb2, 0xd7, 0x04, 0xd5, 0xa8, 0xb9, 0x12, 0x73, 0x8d, 0xef, 0xe1, 0xdc, 0xf9, 0x4e, 0x69, 0x52,
	0xd5, 0xa8, 0xa9, 0x44, 0x02, 0xfa, 0x04, 0x37, 0xcb, 0xa3, 0xce, 0x4c, 0xd1, 0x0a, 0x36, 0x48,
	0x33, 0x8f, 0x56, 0x22, 0xc1, 0xfe, 0x13, 0x6e, 0x79, 0xd4, 0xdf, 0xa5, 0x51, 0xa3, 0x91, 0xc1,
	0x7a, 0xdc, 0xc2, 0xb6, 0x90, 0xfe, 0x88, 0x12, 0x7e, 0x58, 0xed, 0x96, 0xbe, 0xf1, 0xb8, 0x5b,
	0x37, 0x9c, 0x99, 0xe8, 0x49, 0xfb, 0x0c, 0xa4, 0xb3, 0xec, 0xc7, 0x3b, 0xc5, 0xf4, 0xbf, 0xec,
	0x9d, 0xd1, 0x43, 0x51, 0xdb, 0xb2, 0x16, 0x8f, 0x21, 0x71, 0xf4, 0x75, 0x31, 0xa7, 0x75, 0x38,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xf7, 0xf5, 0x1c, 0x0e, 0x46, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PriceCalculatorClient is the client API for PriceCalculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PriceCalculatorClient interface {
	CalculateTotal(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductReply, error)
}

type priceCalculatorClient struct {
	cc *grpc.ClientConn
}

func NewPriceCalculatorClient(cc *grpc.ClientConn) PriceCalculatorClient {
	return &priceCalculatorClient{cc}
}

func (c *priceCalculatorClient) CalculateTotal(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductReply, error) {
	out := new(ProductReply)
	err := c.cc.Invoke(ctx, "/product.PriceCalculator/CalculateTotal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PriceCalculatorServer is the server API for PriceCalculator service.
type PriceCalculatorServer interface {
	CalculateTotal(context.Context, *ProductRequest) (*ProductReply, error)
}

// UnimplementedPriceCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedPriceCalculatorServer struct {
}

func (*UnimplementedPriceCalculatorServer) CalculateTotal(ctx context.Context, req *ProductRequest) (*ProductReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateTotal not implemented")
}

func RegisterPriceCalculatorServer(s *grpc.Server, srv PriceCalculatorServer) {
	s.RegisterService(&_PriceCalculator_serviceDesc, srv)
}

func _PriceCalculator_CalculateTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceCalculatorServer).CalculateTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.PriceCalculator/CalculateTotal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceCalculatorServer).CalculateTotal(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PriceCalculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product.PriceCalculator",
	HandlerType: (*PriceCalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalculateTotal",
			Handler:    _PriceCalculator_CalculateTotal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product/product.proto",
}
